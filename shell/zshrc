#!/usr/bin/env zsh

BREW="/opt/homebrew"

# Aliases
alias b="bundle"
alias c="git create-branch"
alias flush-cache="sudo killall -HUP mDNSResponder"
alias m="rake db:migrate db:rollback && rake db:migrate db:test:prepare"
alias mkdir="mkdir -p"
alias path='echo $PATH | tr -s ":" "\n"'

# Autocomplete branch names for git delete-branch
function _git_delete_branch() {
  __gitcomp "$(__git_heads)" }

# Editor
export VISUAL=vim
export EDITOR=$VISUAL

# History
setopt hist_ignore_all_dups inc_append_history
HISTFILE=~/.zhistory
HISTSIZE=500
SAVEHIST=500

# Disable Homebrew analytics https://docs.brew.sh/Analytics
unset HOMEBREW_NO_ANALYTICS

# fzf for finding files, ag for searching files
if [ -e "$BREW/opt/fzf/shell" ]; then
  source "$BREW/opt/fzf/shell/completion.zsh"
  source "$BREW/opt/fzf/shell/key-bindings.zsh"
fi
export FZF_DEFAULT_COMMAND='fd --type f --hidden --follow --exclude .git'

# Color
autoload -U colors
colors
export CLICOLOR=1

# Prompt
function git_prompt_info() {
  current_branch=$(git current-branch 2> /dev/null)
  if [[ -n $current_branch ]]; then
    echo " %{$fg_bold[green]%}$current_branch%{$reset_color%}"
  fi
}
setopt promptsubst

if ! env | grep -q '^PS1='; then
  PS1='%{$fg_bold[blue]%}%c%{$reset_color%}$(git_prompt_info) %# '
fi

# Completion
fpath=(~/.zsh $fpath)
autoload -Uz compinit
compinit -u

# Set local environment variables
source "$LAPTOP/shell/zshrc.local"

# Prepend programming language binaries via ASDF shims
PATH="$HOME/.asdf/bin:$PATH"
PATH="$HOME/.asdf/shims:$PATH"

# Complete homebrew asdf installation
. /usr/local/opt/asdf/libexec/asdf.sh

# Prepend Homebrew binaries
PATH="$BREW/bin:$PATH"

# Prepend Postgres.app tools
PATH="/Applications/Postgres.app/Contents/Versions/latest/bin:$PATH"

# Laptop
export LAPTOP="$HOME/laptop"
PATH="$LAPTOP/bin:$PATH"

# Code directory
export LOCAL_CODE_DIR="$HOME/Projects"

# Prepend local project ./bin dirs
PATH=".git/safe/../../bin:$PATH"

export PATH
